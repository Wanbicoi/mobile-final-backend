generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = "postgres://ubbkyqpl:rcJWnAe_zyge7WYpwhzTiEQi4y9ZpVyz@john.db.elephantsql.com/ubbkyqpl"
}

model User {
  id         Int @id @default(autoincrement())
  uid        String  @unique // firebase uid 

  name       String
  bio        String?
  imageUrl   String?

  foods      Food[]
  comments   Comment[]

  favouriteFoods Food[] @relation(name: "UserFavouriteFoods")
  favouriteFoodLists FoodList[] @relation(name: "UserFavouriteFoodLists")
}

model FoodList {
  id             Int    @id @default(autoincrement())
  title          String
  description    String
  foods          Food[]

  likers         User[] @relation(name: "UserFavouriteFoodLists")
}

model Food {
  id             Int    @id @default(autoincrement())
  categories     Category[]
  list           FoodList[]

  title          String
  body           String

  images         Json @default("[]")

  ingredients    Json @default("[]")
  recipe         Json @default("[]")
  nutrition_fact Json @default("{}")

  author         User      @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId       Int
  comments       Comment[]
  createdAt      DateTime  @default(now())

  likers         User[] @relation(name: "UserFavouriteFoods")
}

model Comment {
  id             Int      @id @default(autoincrement())
  body           String
  author         User     @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId       Int
  createdAt      DateTime @default(now())

  food           Food @relation(fields:[foodId], references: [id], onDelete: Cascade)
  foodId         Int
}

model Category {
  name String    @id
  food Food[]
}

